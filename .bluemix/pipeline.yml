---
stages:
- name: Extract & Build
  inputs:
  - type: git
    branch: master
  triggers:
  - type: commit
  jobs:
  - name: Get changes
    type: builder
    build_type: shell
    script: |-
      #!/bin/bash
      # This script just dumps the changes included in this build into a file named changelog.txt
      # This change log can be used later to be included in notifications
      git log ${GIT_COMMIT}..HEAD --graph --oneline > changelog.txt
      cat changelog.txt
- name: Setup prod
  inputs:
  - type: job
    stage: Extract & Build
    job: Get changes
  triggers:
  - type: commit
  properties:
  - name: NEW_RELIC_LICENSE_KEY
    value: ''
    type: text
  jobs:
  - name: NewRelic
    type: builder
    build_type: shell
    script: |-
      #!/bin/bash
      if [ -z ${NEW_RELIC_LICENSE_KEY+x} ];
      then
        echo "NewRelic is disabled.  Please specify your API NewRelic API key.";
      else
        npm install newrelic
        cp node_modules/newrelic/newrelic.js ./
        mkdir .newrelic
        echo ${NEW_RELIC_LICENSE_KEY} > .newrelic/key;
      fi
- name: Push to prod
  inputs:
  - type: job
    stage: Setup prod
    job: NewRelic
  triggers:
  - type: stage
  jobs:
  - name: Deploy Blue
    type: deployer
    target:
      url: ${CF_TARGET_URL}
      organization: ${CF_ORGANIZATION}
      space: ${CF_SPACE}
      application: ${CF_APP}
    script: |
      #!/bin/bash

      export NEW_RELIC_LICENSE_KEY = `cat .newrelic/key`
      if [ -f .newrelic/key ]; then
        cf push "${CF_APP}-blue" -n "${CF_APP}" --no-start
        cf set-env "${CF_APP}-blue" NEW_RELIC_LICENSE_KEY "${NEW_RELIC_LICENSE_KEY}"
        cf set-env "${CF_APP}-blue" NEW_RELIC_APP_NAME "${CF_APP}"
      fi
      cf start
  - name: Drop Green
    type: deployer
    target:
    target:
      url: ${CF_TARGET_URL}
      organization: ${CF_ORGANIZATION}
      space: ${CF_SPACE}
      application: ${CF_APP}
    script: |
      #!/bin/bash
      cf delete "${CF_APP}-green" --f
  - name: Blue->Green
    type: deployer
    target:
      url: ${CF_TARGET_URL}
      organization: ${CF_ORGANIZATION}
      space: ${CF_SPACE}
      application: ${CF_APP}
    script: |
      #!/bin/bash
      cf rename "${CF_APP}-blue" "${CF_APP}-green"
  - name: Notify
    type: builder
